# Dynamically set SSH_AUTH_SOCK if it's available in the mounted /tmp directory
if [ -n "$(find /tmp -type s -name 'agent.*' 2>/dev/null)" ]; then
  export SSH_AUTH_SOCK=$(find /tmp -type s -name 'agent.*' 2>/dev/null)
fi

export DISPLAY=$(cat /tmp/.display_env_$HOST_UID)

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/root/anaconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/root/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/root/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/root/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# Conda bash completion
CONDA_ROOT=/root/anaconda3
if [[ -r $CONDA_ROOT/etc/profile.d/bash_completion.sh ]]; then
    source $CONDA_ROOT/etc/profile.d/bash_completion.sh
else
    echo "WARNING: could not find conda-bash-completion setup script"
fi

export OPENAI_API_KEY="<your-key>"
export HF_API_KEY="<your-key>"
export TF_CPP_MIN_LOG_LEVEL='2'
export AM_I_DOCKER=False
export BUILD_WITH_CUDA=True
export CUDA_HOME=/usr/local/cuda/
export MAX_JOBS=6
export PATH="${CUDA_HOME}/bin:$PATH"
export VLLM_NCCL_SO_PATH=/usr/lib/x86_64-linux-gnu/libnccl.so.2
export VLLM_LOGGING_LEVEL=ERROR   # INFO
export TOKENIZERS_PARALLELISM=false
export PYTHONWARNINGS="ignore"
export PYTHONPATH=/root/mount/Matterport3DSimulator/build:$PYTHONPATH
export MATTERPORT_DATA_DIR=/root/mount/Matterport3DSimulator/data/v1/scans

alias listpycache='find . -type d -name "__pycache__" -print'
alias cleanpycache='listpycache 2>/dev/null | xargs rm -rf 2>/dev/null'

gitall() {
    if [ -z "$1" ]; then
        git add . && git commit -m "changes"
    else
        git add . && git commit -m "$1"
    fi
}